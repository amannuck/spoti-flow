let e=[];chrome.storage.local.get(["spotifyTabs"],t=>{t.spotifyTabs&&(e=t.spotifyTabs,s())});async function s(){const t=[];for(const r of e)try{const o=await chrome.tabs.get(r);o&&o.url&&o.url.includes("open.spotify.com")&&t.push(r)}catch{console.log("Tab no longer exists:",r)}e=t,chrome.storage.local.set({spotifyTabs:e})}chrome.tabs.onUpdated.addListener((t,r,o)=>{o.url&&o.url.includes("open.spotify.com")&&r.status==="complete"&&(e.includes(t)||(e.push(t),chrome.storage.local.set({spotifyTabs:e}),console.log("Spotify tab detected:",t)),chrome.scripting.executeScript({target:{tabId:t},files:["contentScript.js"]}).catch(console.error))});chrome.tabs.onRemoved.addListener(t=>{const r=e.indexOf(t);r>-1&&(e.splice(r,1),chrome.storage.local.set({spotifyTabs:e}),console.log("Spotify tab closed:",t))});setInterval(s,5*60*1e3);chrome.runtime.onMessage.addListener((t,r,o)=>{if(t.action==="getSpotifyTabs")return s().then(()=>{o({tabs:e})}),!0;if(t.action==="control"&&t.command){const{command:c}=t;return e.length>0?(chrome.tabs.sendMessage(e[0],{action:"control",command:c}).then(()=>o({success:!0})).catch(a=>{console.error("Error sending command:",a),o({success:!1,error:"Failed to send command"})}),!0):(o({success:!1,error:"No Spotify tabs found"}),!0)}if(t.action==="getTrackInfo")return e.length>0?(chrome.tabs.sendMessage(e[0],{action:"getTrackInfo"}).then(c=>o(c)).catch(c=>{console.error("Error getting track info:",c),o({success:!1,error:"Failed to get track info"})}),!0):(o({success:!1,error:"No Spotify tabs found"}),!0)});
